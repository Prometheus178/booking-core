version: '3.9'

services:
  booking-core_db:
    container_name: 'booking-core_db'
    image: 'postgres:12'
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: core_db
      POSTGRES_USER: core_user
      POSTGRES_PASSWORD: core
    volumes:
      - postgres-data:/var/lib/postgresql/data
  booking-core_app:
    container_name: 'booking-core_app'
    build: .
    ports:
      - 8080:8080
      - 8787:8787
    environment:
      DATABASE_URL: postgresql://booking-core_db:5432/core_db
      DATABASE_USERNAME: core_user
      DATABASE_PASSWORD: core
    depends_on:
      - booking-core_db
  redis:
    container_name: 'booking-core_redis'
    image: redis:7-alpine
    ports:
      - "6379:6379"
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
volumes:
  postgres-data:
